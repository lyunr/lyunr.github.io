<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>安全访问中</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            overflow: hidden;
            font-family: Arial, sans-serif;
        }
        #loader {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: white;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            z-index: 1000;
            transition: opacity 0.5s;
        }
        .spinner {
            width: 50px;
            height: 50px;
            border: 5px solid rgba(0,0,0,0.1);
            border-top-color: #3498db;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        #status {
            margin-top: 20px;
            font-size: 18px;
            color: #333;
        }
        #content-frame {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            border: none;
            opacity: 0;
            transition: opacity 0.5s;
        }
    </style>
</head>
<body>
    <!-- 加载动画 -->
    <div id="loader">
        <div class="spinner"></div>
        <div id="status">正在建立安全连接...</div>
    </div>

    <!-- 内容容器 -->
    <iframe id="content-frame" sandbox="allow-scripts allow-same-origin allow-forms allow-popups"></iframe>

    <script>
        // 安全解析URL参数
        function getTargetUrl() {
            const params = new URLSearchParams(location.search);
            try {
                // Base64解码
                const base64 = params.get('c');
                if (base64) {
                    const decoded = atob(base64.replace(/-/g, '+').replace(/_/g, '/'));
                    if (/^https?:\/\//i.test(decoded)) return decoded;
                }
            } catch (e) {}
            return null;
        }

        // 动态创建代理iframe
        function createProxyFrame(targetUrl) {
            return new Promise((resolve) => {
                const proxyHtml = `
                    <!DOCTYPE html>
                    <html>
                    <head>
                        <base href="${targetUrl}">
                        <style>
                            body { margin: 0; overflow: hidden }
                            iframe { width: 100%; height: 100%; border: none }
                        </style>
                        <script>
                            window.onload = function() {
                                // 创建最终内容iframe
                                const innerFrame = document.createElement('iframe');
                                innerFrame.src = "${targetUrl}";
                                document.body.appendChild(innerFrame);
                                
                                // 同步标题到父窗口
                                try {
                                    setInterval(() => {
                                        parent.document.title = innerFrame.contentDocument?.title || "安全访问中";
                                    }, 1000);
                                } catch(e) {}
                            };
                        <\/script>
                    </head>
                    <body></body>
                    </html>
                `;

                const frame = document.getElementById('content-frame');
                frame.src = URL.createObjectURL(new Blob([proxyHtml], { type: 'text/html' }));
                
                frame.onload = () => {
                    setTimeout(() => {
                        frame.style.opacity = '1';
                        document.getElementById('loader').style.opacity = '0';
                        setTimeout(() => {
                            document.getElementById('loader').style.display = 'none';
                        }, 500);
                        resolve(true);
                    }, 300);
                };
            });
        }

        // 主执行流程
        document.addEventListener('DOMContentLoaded', async () => {
            const targetUrl = getTargetUrl();
            if (!targetUrl) {
                document.getElementById('status').textContent = "错误：无效的跳转参数";
                return;
            }

            // 尝试iframe嵌套方案
            try {
                await createProxyFrame(targetUrl);
            } catch (e) {
                // 如果iframe方案失败，显示备用提示
                document.getElementById('status').textContent = "此内容需要在新窗口打开";
                const btn = document.createElement('button');
                btn.textContent = '点击继续访问';
                btn.style.marginTop = '20px';
                btn.style.padding = '10px 20px';
                btn.style.background = '#3498db';
                btn.style.color = 'white';
                btn.style.border = 'none';
                btn.style.borderRadius = '5px';
                btn.style.cursor = 'pointer';
                btn.onclick = () => { location.href = targetUrl; };
                document.getElementById('loader').appendChild(btn);
            }
        });
    </script>
</body>
</html>
