<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>安全访问中</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
            background: #f6f8fa;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            text-align: center;
        }
        .container {
            background: white;
            border-radius: 12px;
            padding: 30px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
            max-width: 90%;
        }
        .spinner {
            width: 50px;
            height: 50px;
            border: 5px solid rgba(0,0,0,0.1);
            border-top-color: #0366d6;
            border-radius: 50%;
            margin: 0 auto 20px;
            animation: spin 1s linear infinite;
        }
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        .status {
            font-size: 18px;
            color: #24292e;
            margin-bottom: 15px;
        }
        .github-watermark {
            position: fixed;
            bottom: 15px;
            right: 15px;
            color: #586069;
            font-size: 12px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="spinner"></div>
        <div class="status" id="status">正在初始化安全连接...</div>
    </div>
    <div class="github-watermark">GitHub Pages</div>

    <script>
        // 4层递进式跳转策略（从最隐蔽到最直接）
        const strategies = [
            {
                name: "iframe嵌套伪装",
                execute: (url) => {
                    return new Promise((resolve) => {
                        const iframe = document.createElement('iframe');
                        iframe.src = url;
                        iframe.style.cssText = `
                            position: absolute;
                            width: 1px;
                            height: 1px;
                            opacity: 0;
                        `;
                        iframe.onload = () => resolve(true);
                        iframe.onerror = () => resolve(false);
                        document.body.appendChild(iframe);
                        
                        // 3秒后无论成功与否都移除iframe
                        setTimeout(() => {
                            iframe.remove();
                            resolve(false);
                        }, 3000);
                    });
                }
            },
            {
                name: "动态A标签点击",
                execute: (url) => {
                    return new Promise((resolve) => {
                        const a = document.createElement('a');
                        a.href = url;
                        a.style.display = 'none';
                        a.id = 'gh-redirect';
                        document.body.appendChild(a);
                        
                        // 模拟用户点击
                        a.click();
                        
                        // 检测是否跳转成功
                        setTimeout(() => {
                            if (document.getElementById('gh-redirect')) {
                                a.remove();
                                resolve(false);
                            }
                        }, 1500);
                    });
                }
            },
            {
                name: "meta刷新跳转",
                execute: (url) => {
                    return new Promise((resolve) => {
                        const meta = document.createElement('meta');
                        meta.httpEquiv = "refresh";
                        meta.content = `0;url=${url}`;
                        document.head.appendChild(meta);
                        setTimeout(() => resolve(false), 1000);
                    });
                }
            },
            {
                name: "终极location跳转",
                execute: (url) => {
                    window.location.href = url;
                    return Promise.resolve(true);
                }
            }
        ];

        // 获取目标URL
        function getTargetUrl() {
            const params = new URLSearchParams(location.search);
            
            // 1. 尝试Base64解码
            try {
                const base64 = params.get('c') || params.get('url');
                if (base64) {
                    const decoded = atob(base64);
                    if (/^https?:\/\//i.test(decoded)) return decoded;
                }
            } catch (e) {}
            
            // 2. 尝试直接参数
            const directUrl = params.get('redirect') || params.get('u');
            if (directUrl && /^https?:\/\//i.test(directUrl)) {
                return directUrl;
            }
            
            return null;
        }

        // 执行策略链
        async function executeStrategies(url) {
            document.getElementById('status').textContent = "正在验证链接...";
            
            for (let i = 0; i < strategies.length; i++) {
                const strategy = strategies[i];
                document.getElementById('status').textContent = `[${i+1}/4] ${strategy.name}...`;
                
                const success = await strategy.execute(url);
                if (success) return;
                
                // 策略间隔延迟
                await new Promise(resolve => setTimeout(resolve, 500));
            }
            
            document.getElementById('status').textContent = "跳转失败，请手动访问";
        }

        // 启动流程
        document.addEventListener('DOMContentLoaded', () => {
            const targetUrl = getTargetUrl();
            if (targetUrl) {
                // 修改标题增加可信度
                document.title = `安全访问: ${new URL(targetUrl).hostname}`;
                executeStrategies(targetUrl);
            } else {
                document.getElementById('status').textContent = "错误：缺少有效的跳转参数";
            }
        });
    </script>
</body>
</html>
