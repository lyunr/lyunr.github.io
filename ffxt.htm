<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>安全跳转中</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
            background: linear-gradient(135deg, #f6f8fa 0%, #ebf0f5 100%);
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            text-align: center;
        }
        .container {
            max-width: 500px;
            padding: 30px;
            background: white;
            border-radius: 12px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
        }
        .spinner {
            width: 50px;
            height: 50px;
            border: 5px solid rgba(0,0,0,0.1);
            border-top-color: #0366d6;
            border-radius: 50%;
            margin: 0 auto 20px;
            animation: spin 1s linear infinite;
        }
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        .status {
            font-size: 18px;
            color: #24292e;
            margin-bottom: 20px;
        }
        .github-badge {
            position: fixed;
            bottom: 15px;
            right: 15px;
            background-color: #f6f8fa;
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 12px;
            color: #586069;
            border: 1px solid #e1e4e8;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="spinner"></div>
        <div class="status" id="status">正在验证链接安全性...</div>
    </div>
    <div class="github-badge">GitHub Pages</div>

    <script>
        // GitHub Pages 专用跳转逻辑
        function executeRedirect() {
            const params = new URLSearchParams(window.location.search);
            let targetUrl = '';

            // 1. 优先尝试解析Base64编码的URL
            try {
                const base64Url = params.get('c') || params.get('url');
                if (base64Url) {
                    targetUrl = atob(base64Url);
                    if (!/^https?:\/\//i.test(targetUrl)) {
                        targetUrl = 'http://' + targetUrl;
                    }
                }
            } catch (e) {
                console.log("Base64解码失败，尝试直接跳转");
            }

            // 2. 如果Base64解析失败，尝试直接跳转参数
            if (!targetUrl) {
                targetUrl = params.get('redirect') || params.get('u');
            }

            // 验证URL格式
            if (!targetUrl || !/^https?:\/\//i.test(targetUrl)) {
                document.getElementById('status').textContent = "错误：无效的跳转链接";
                return;
            }

            // GitHub Pages 安全策略兼容方案
            document.getElementById('status').textContent = "即将跳转到目标页面...";
            
            // 方法1: 延迟跳转（降低拦截概率）
            setTimeout(() => {
                // 方法2: 动态创建iframe（部分平台有效）
                const iframe = document.createElement('iframe');
                iframe.src = targetUrl;
                iframe.style.display = 'none';
                document.body.appendChild(iframe);

                // 方法3: 终极跳转（兼容GitHub）
                window.location.href = targetUrl;
            }, 1500); // 延迟1.5秒跳转
        }

        // 页面加载后执行
        document.addEventListener('DOMContentLoaded', executeRedirect);
    </script>
</body>
</html>
